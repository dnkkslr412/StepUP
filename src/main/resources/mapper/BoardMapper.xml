<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.teampjt.StepUP.board.BoardMapper">
	
	<!-- *****자유게시판 SQL***** -->
	
	<insert id="fb_regist">
		      insert into free_board(free_title, free_content, user_name, user_no)
      		  values (#{free_title}, #{free_content}, #{user_name}, #{user_no})
	</insert>
	
	<select id="fb_getList" resultType="FreeBoardVO">
		<!-- select * from free_board order by free_board_no desc -->
		select *
		from (select A.*, @ROWNUM := @ROWNUM + 1 AS RN
			  FROM (SELECT *
					FROM free_board
					WHERE
					1 = 1
					<if test="searchKeyword  != null">
						AND(
						free_title like '%${searchKeyword}%'
						OR
						free_content like '%${searchKeyword}%'
						OR
						user_name like '%${searchKeyword}%')
					</if>
		            order by free_board_no desc) A, (select @ROWNUM := 0) D  
		) B where 1 = 1
		<![CDATA[
		AND
		RN > (#{page}-1) * #{amount} AND RN <= #{page} * #{amount}
		]]>
	</select>
	
	<select id="fb_getTotal" resultType="int">
		select count(*) as total from free_board
		where
		1 = 1
		<if test="searchKeyword  != null">
		AND
		(
		free_title like '%${searchKeyword}%'
		OR
		free_content like '%${searchKeyword}%'
		OR
		user_name like '%${searchKeyword}%'
		)
		</if>
	</select>
	
	<select id="fb_getUpdateList" resultType="FreeBoardVO">
		select * from free_board where free_board_no = #{free_board_no}
	</select>
	
	<update id="fb_update">
		update free_board
   			set free_title = #{free_title},
   			free_content = #{free_content}
   		where free_board_no = #{free_board_no}
	</update>
	
	<delete id="fb_delete">
		delete from free_board where free_board_no = #{free_board_no}
	</delete>
	
	<insert id="mc_regist">
		insert into main_comment(user_no, user_name, comment_contents, free_board_no)
      	values (#{user_no}, #{user_name}, #{comment_contents}, #{free_board_no})
	</insert>
	
	<select id="mc_getList" resultType="MainCommentsVO">
		select 
				*,
				(select uu.filepath from user_upload uu where uu.user_no = a.user_no) as filepath
		 	from 
		 		main_comment a
		 	where 
		 		free_board_no = #{free_board_no}
	</select>
	
	<delete id="mc_delete">
		delete from main_comment where comment_no = #{comment_no}
	</delete>
	
	<update id="mc_UpdateContents">
		update main_comment
   			set comment_contents = #{comment_contents}
   		where comment_no = #{comment_no}
	</update>
	
	<!-- *****qna게시판 SQL***** -->
	
	<insert id="qna_regist">
		      insert into qna_board(qna_title, qna_content, user_name, user_no)
      		  values (#{qna_title}, #{qna_content}, #{user_name}, #{user_no})
	</insert>
	
	<select id="qna_getList" resultType="QnaBoardVO">
		select *
		from (select A.*, @ROWNUM := @ROWNUM + 1 AS RN
			  FROM (SELECT *
					FROM qna_board
					WHERE
					1 = 1
					<if test="searchKeyword  != null">
						AND(
						qna_title like '%${searchKeyword}%'
						OR
						qna_content like '%${searchKeyword}%'
						OR
						user_name like '%${searchKeyword}%')
					</if>
		            order by qna_board_no desc) A, (select @ROWNUM := 0) D  
		) B where 1 = 1
		<![CDATA[
		AND
		RN > (#{page}-1) * #{amount} AND RN <= #{page} * #{amount}
		]]>
	</select>
	
	<select id="qna_getTotal" resultType="int">
		select count(*) as total from qna_board
		where
		1 = 1
		<if test="searchKeyword  != null">
		AND
		(
		qna_title like '%${searchKeyword}%'
		OR
		qna_content like '%${searchKeyword}%'
		OR
		user_name like '%${searchKeyword}%'
		)
		</if>
	</select>
	
	<select id="qna_getUpdateList" resultType="QnaBoardVO">
		select * from qna_board where qna_board_no = #{qna_board_no}
	</select>
	
	<update id="qna_update">
		update qna_board
   			set qna_title = #{qna_title},
   			qna_content = #{qna_content}
   		where qna_board_no = #{qna_board_no}
	</update>
	
	<delete id="qna_delete">
		delete from qna_board where qna_board_no = #{qna_board_no}
	</delete>
	
	<insert id="qc_regist">
		insert into qna_comment(user_no, user_name, qna_comment_contents, qna_board_no)
      	values (#{user_no}, #{user_name}, #{qna_comment_contents}, #{qna_board_no})
	</insert>
	
	<select id="qc_getList" resultType="QnaCommentsVO">
		select 
				*,
				(select uu.filepath from user_upload uu where uu.user_no = a.user_no) as filepath
		 	from 
		 		qna_comment a
		 	where 
		 		qna_board_no = #{qna_board_no}
	</select>
	
	<delete id="qc_delete">
		delete from qna_comment where qna_comment_no = #{qna_comment_no}
	</delete>
	
	<update id="qc_UpdateContents">
		update qna_comment
   			set qna_comment_contents = #{qna_comment_contents}
   		where qna_comment_no = #{qna_comment_no}
	</update>
	
	
	
	

	
	
	
	

</mapper>